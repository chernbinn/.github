搭建静态网站：
1.设计：静态网页网站，以线框体现为主。主要展示多个项目和子项目
2.部署：github pages
3.页面内容：
a、项目列表页。简单概述，然后展示项目列表，每一个项目简要描述，链接到一个具体的项目页上
b、在项目页上，概述项目，链接到具体的项目仓库上，链接项目文档、链接项目对应的产品下载列表，不同档次的项目赞助。项目赞助是一个页面内的嵌入的可切换不同赞助份额的子页面。每一个子页面展示两张图片（支付宝收款码、微信收款码）
c、独立的赞助页，和具体项目无关，是对整个项目、产品、网站构建的平台的赞助，包含多个档次
--------------------------------------

搭建静态网站
静态网页设计与部署指南
章节一：设计概述
• 设计目标与用户需求分析

• 线框图设计原则及工具选择

• 页面布局规划（项目列表页、项目详情页、赞助页面）

章节二：项目列表页设计
• 项目列表页结构介绍

简单概述部分，包括欢迎词和网站目的说明
项目列表展示区，每个项目包含简要描述和链接至详情页的按钮
• 用户交互设计要点
如何引导用户浏览不同项目
列表加载方式（如滚动加载或分页）
章节三：项目详情页构建
• 项目详情页内容安排

项目概述部分，详细介绍项目背景和目标
相关链接设置，包括项目仓库链接、文档链接、产品下载列表链接
赞助信息集成，通过可切换界面展示不同档次的赞助选项
• 赞助子页面设计
支付宝收款码和微信收款码的嵌入方法
用户体验优化，确保切换流畅且易于理解
章节四：独立赞助页设计
• 独立赞助页面的作用和意义

• 多档次赞助方案展示策略

不同档次赞助的具体内容说明
收款方式的清晰呈现（支付宝、微信等）
• 如何通过赞助页增强用户的参与感和归属感
章节五：部署与维护
• GitHub Pages的基本概念和使用方法

• 静态网站上传流程详解

文件准备，确保所有资源正确引用
使用Git进行版本控制和发布
• 后期维护建议
定期更新内容和功能
监控网站性能并进行优化